## Scenario settings
Scenario.name = Epidemic_Buffersize5M
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 3600s == 1h
Scenario.endTime = 3600


## Interface-specific settings:
# "Bluetooth" interface 
btInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
btInterface.transmitSpeed = 250k
btInterface.transmitRange = 15

# High speed, long range, interface 
highspeedInterface.type = SimpleBroadcastInterface
highspeedInterface.transmitSpeed = 10M
highspeedInterface.transmitRange = 500

# Define 6 different node groups
Scenario.nrofHostGroups = 6

## Group and movement model specific settings

# Common settings for all groups
Group.movementModel = ShortestPathMapBasedMovement
Group.router = EpidemicRouter
Group.bufferSize = 5M
Group.waitTime = 0, 120

# All nodes have the bluetooth interface
Group.nrofInterfaces = 1
Group.interface1 = btInterface

# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 300


## Group-specific settings:
# group1 One bus(technical breakdown) specific settings(sender)
Group1.groupID = b
Group1.movementModel = BusMovement
Group1.routeFile = data/HelsinkiMedium/A_bus.wkt
Group1.busControlSystemNr = 1
Group1.routeType = 2
Group1.waitTime = 10, 30
Group1.speed = 0,0
Group1.nrofHosts = 1

#group2 Buses(noraml) specific settings
Group2.groupID = b
Group2.movementModel = BusMovement
Group2.routeFile = data/HelsinkiMedium/A_bus.wkt
Group2.routeType = 2
Group2.waitTime = 10, 30
Group2.speed = 2.7,13.9
Group2.busControlSystemNr = 3
Group2.nrofHosts = 2

# group3 Cars(Need to transfer to the bus that has had a technical problem) specific settings(receivers)
Group3.groupID = c
#cars can drive only on roads
Group3.okMaps = 1
Group3.speed = 2.5, 15
Group3.movementModel = CarMovement
Group3.nrofHosts = 40

# another group of cars specific settings
Group4.groupID = c
# cars can drive only on roads
Group4.okMaps = 1
Group4.speed = 2.5, 15
Group4.movementModel = MapBasedMovement
Group4.nrofHosts = 40


## The Tram groups specific settings(receivers)(Need to transfer to the bus that has had a technical problem)
Group5.groupID = t
Group5.movementModel = MapRouteMovement
Group5.routeFile = data/tram4.wkt
Group5.routeType = 2
Group5.waitTime = 10, 30
Group5.speed = 7, 10
Group5.nrofHosts = 2

Group6.groupID = t
Group6.movementModel = MapRouteMovement
Group6.routeFile = data/tram10.wkt
Group6.routeType = 2
Group6.waitTime = 10, 30
Group6.speed = 7, 10
Group6.nrofHosts = 2


## Message creation parameters
# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = MessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events1.interval = 25,35
# Message sizes (500kB - 1MB)
Events1.size = 500k,1M
# range of message source/destination addresses
Events1.hosts = [0,0;0,0]
Events1.tohosts = [1,42;83,86]
# Message ID prefix
Events1.prefix = M


## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 4500, 3400
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 4

MapBasedMovement.mapFile1 = data/roads.wkt
MapBasedMovement.mapFile2 = data/main_roads.wkt
MapBasedMovement.mapFile3 = data/pedestrian_paths.wkt
MapBasedMovement.mapFile4 = data/shops.wkt


## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 1
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
Report.report1 = MessageStatsReport
#Report.report2 = ContactTimesReport

## Default settings for some routers settings


## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true


## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
