####################### REMEMBER! Bluetooth cannot talk to wifi etc ###########################

## Scenario settings
Scenario.name = SmallScaleFlooding_DensePopulation
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 43200s == 12h
Scenario.endTime = 10800

## Custom Flooding Scenario Settings
Flooding.floodCount = 1
Flooding.floodLocations = (1000,1000)
Flooding.floodGrowthRates = 60
Flooding.floodMaxAreas = 150000
Flooding.floodSafeZone = (3000,2000)

## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second) 
# transmitRange : range of the interface (meters)

# All higher powered interfaces can also use lower powered mode
# Interfaces for all nodes follow below pattern:
# transmit speed:
# transmit range:
# All of type SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps

# For pedestrians
lowPowerInterface.type = SimpleBroadcastInterface
lowPowerInterface.transmitSpeed = 250k
lowPowerInterface.transmitRange = 2

# For cars
mediumPowerInterface.type = SimpleBroadcastInterface
mediumPowerInterface.transmitSpeed = 2500k
mediumPowerInterface.transmitRange = 10

# For buses and trams
highPowerInterface.type = SimpleBroadcastInterface
highPowerInterface.transmitSpeed = 4000k
highPowerInterface.transmitRange = 25

# For infrastructure nodes
highPowerLongRangeInterface.type = SimpleBroadcastInterface
highPowerLongRangeInterface.transmitSpeed = 4000k
highPowerLongRangeInterface.transmitRange = 100

# Define 4 host groups for pedestrians, cars, buses and trams
# Then define individual groups for infrastructure nodes
Scenario.nrofHostGroups = 8

## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all 
#          for all MapBasedMovent models
# routeFile: route's file path - for MapRouteMovement
# routeType: route's type - for MapRouteMovement


# Common settings for all groups
Group.movementModel = TargetedShortestPathMapBasedMovement
Group.router = EpidemicRouter
Group.bufferSize = 5M
Group.waitTime = 0, 120
# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 300


# group1 (pedestrian) specific settings
Group1.groupID = p
# 2-10 km/h (maybe people running)
Group1.speed = 0.5, 2.8
Group1.nrofHosts = 200
Group1.nrofInterfaces = 1
Group1.interface1 = lowPowerInterface

# group2 (car) specific settings
Group2.groupID = c
# cars can drive only on roads
Group2.okMaps = 1
# 10-50 km/h (in city so no motorway)
Group2.speed = 2.8, 13.9
Group2.nrofHosts = 200
Group2.nrofInterfaces = 2
Group2.interface1 = mediumPowerInterface
Group2.interface2 = lowPowerInterface

# group3 (bus) specific settings
Group3.groupID = b
# buses can drive only on roads
Group3.okMaps = 1
Group3.bufferSize = 25M
Group3.movementModel = MapRouteMovement
# Demo bus route
Group3.routeFile = data/demo_bus.wkt
Group3.routeType = 1
Group3.waitTime = 10, 30
# 10-40 km/h (buses generally slower than cars)
Group3.speed = 2.8, 11.1
Group3.nrofHosts = 32
Group3.nrofInterfaces = 3
Group3.interface1 = highPowerInterface
Group3.interface2 = mediumPowerInterface
Group3.interface3 = lowPowerInterface

# group4 (tram) specific settings
Group4.groupID = t
Group4.bufferSize = 25M
Group4.movementModel = MapRouteMovement
Group4.routeFile = data/tram3.wkt
Group4.routeType = 1
Group4.waitTime = 10, 30
Group4.speed = 7, 10
Group4.nrofHosts = 32
Group4.nrofInterfaces = 3
Group4.interface1 = highPowerInterface
Group4.interface2 = mediumPowerInterface
Group4.interface3 = lowPowerInterface

# group 5 (infrastructure node) specific settings
## Stationary Movement only allows one location to be defined at a time
## so define the infrastructure nodes separately
Group5.groupID = i
Group5.bufferSize = 100M
Group5.movementModel = StationaryMovement
Group5.nrofHosts = 1
Group5.nodeLocation= 1300, 200
Group5.nrofInterfaces = 4
Group5.interface1 = highPowerLongRangeInterface
Group5.interface2 = highPowerInterface
Group5.interface3 = mediumPowerInterface
Group5.interface4 = lowPowerInterface

Group6.groupID = i
Group6.bufferSize = 100M
Group6.movementModel = StationaryMovement
Group6.nrofHosts = 1
Group6.nodeLocation= 2900, 2400
Group6.nrofInterfaces = 4
Group6.interface1 = highPowerLongRangeInterface
Group6.interface2 = highPowerInterface
Group6.interface3 = mediumPowerInterface
Group6.interface4 = lowPowerInterface

Group7.groupID = i
Group7.bufferSize = 100M
Group7.movementModel = StationaryMovement
Group7.nrofHosts = 1
Group7.nodeLocation= 1900, 2400
Group7.nrofInterfaces = 4
Group7.interface1 = highPowerLongRangeInterface
Group7.interface2 = highPowerInterface
Group7.interface3 = mediumPowerInterface
Group7.interface4 = lowPowerInterface

Group8.groupID = i
Group8.bufferSize = 100M
Group8.movementModel = StationaryMovement
Group8.nrofHosts = 1
Group8.nodeLocation= 900, 400
Group8.nrofInterfaces = 4
Group8.interface1 = highPowerLongRangeInterface
Group8.interface2 = highPowerInterface
Group8.interface3 = mediumPowerInterface
Group8.interface4 = lowPowerInterface

## Message creation parameters
# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = MessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 5-10 seconds)
Events1.interval = 5, 10
# Message sizes (5kB)
Events1.size = 5k
# Message ID prefix
Events1.prefix = M


## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 4500, 3400
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 4

MapBasedMovement.mapFile1 = data/roads.wkt
MapBasedMovement.mapFile2 = data/main_roads.wkt
MapBasedMovement.mapFile3 = data/pedestrian_paths.wkt
MapBasedMovement.mapFile4 = data/shops.wkt

## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 8
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
Report.report1 = ContactTimesReport
Report.report2 = ConnectivityONEReport
Report.report3 = FloodedNodesReport
Report.report4 = ContactsPerHourReport
Report.report5 = DeliveredMessagesReport
Report.report6 = EncountersVSUniqueEncountersReport
Report.report7 = InterContactTimesReport
Report.report8 = MessageStatsReport

## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true

## Default settings for some routers settings
SprayAndWaitRouter.nrofCopies = 8
SprayAndWaitRouter.binaryMode = true



## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
